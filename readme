CSC 440 - Data Mining Final Project
Predicting Online News Popularity

Aeshaan Wahlang & Sayudh Roy

The four models which have been implemented are:

1. Linear Regression
2. Extreme Gradient Boosting (XGBoost)
3. Random Forest Regression
4. Neural Networks (Multi-Layer Perceptron or MLP)

The following files are present in this directory:

Sl.		File 								Purpose
1		OnlineNewsPopularity.csv			Dataset downloaded from UCI Repository
2		data/OnlineNewsPopularity.names		Dataset description
3		linear_regression.py 				Code for Linear Regression
4		nn_preprocessing.py 				Code for Neural Network Preprocessing
5		NNReg.py 							Code for Training/Testing Neural Network Models (default: Testing)
6		preprocess.py 						Code for Other Models' Preprocessing
7		rf_regression.py 					Code for Random Forest Regression
8		weighted_avgs.py 					Code for Weighted Averages Regression Model
9		xgboost_regression.py 				Code for XGBoost Regression
10		model.json							Contains the Neural Network Structure
11		model.h5							Contains the Neural Network Model Weights (used by TensorFlow)
12		lr_results.csv						Contains Results obtained from Linear Regression
13		nn_results.csv						Contains Results obtained from Neural Network
14		rfr_results.csv						Contains Results obtained from Random Forest Regression
15		xgb_results.csv						Contains Results obtained from XGBoost Regression

The code has been developed using Python 3.6.3 using the Anaconda Spyder 3.2.4 IDE. They use the following python libraries for execution:

Sl.		Library 							Purpose
1		MatPlotLib 							Graph Plotting
2		Pandas 								Dataset Manipulation
3		Numpy 								Mathematical/Statistical
4		Keras								Machine Learning Library (for Neural Networks with TensorFlow Backend)
5		Seaborn								Statistical Data Visualization
6		SKLearn								Machine Learning Library (for Linear Regression and Random Forest)
7		XGBoost 							Machine Learning Library (for Extreme Gradient Boosting)
8		TensorFlow							Machine Learning Library 

To be able to run the python files, the aforementioned libraries need to be installed on the system.

HOW TO RUN:
Please Note: For the ease of use, we have included all the results of our models on the 'xxx_results.csv' files. Hence for viewing the results on our test set, please access those files. In order to run the weighted averages ensemble model, please run the file 'weighted_avgs.py'. Otherwise to test each of the other models, please access their respective python scripts.